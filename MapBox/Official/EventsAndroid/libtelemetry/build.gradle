apply plugin: 'com.android.library'

// Re-apply runtime required subproject gradle scripts and classpaths,
// so that Maps SDK doesn't rely on them being served from the top level build.gradle
//apply from: "../gradle/dependencies.gradle"

version = VERSION_NAME

android {
    compileSdkVersion androidSDKVersions.compileSdkVersion
    buildToolsVersion androidSDKVersions.buildToolsVersion

    defaultConfig {
        minSdkVersion androidSDKVersions.minSdkVersion
        targetSdkVersion androidSDKVersions.targetSdkVersion//
        versionCode 1
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-consumer.pro'
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    flavorDimensions "version"
    productFlavors {
        full {
            dimension "version"
        }

        lite {
            dimension "version"
            versionNameSuffix "-lite"
        }
    }
}

dependencies {
//    testImplementation dependenciesList.junit
//    testImplementation dependenciesList.mockito
//    testImplementation dependenciesList.okhttp3Mockwebserver
//    testImplementation dependenciesList.commonsIO
//
//    androidTestImplementation dependenciesList.mockitoAndroid
//    androidTestImplementation dependenciesList.testRunner
//    androidTestImplementation dependenciesList.testRules
//    androidTestImplementation dependenciesGooglePlayList.location_and_activity_recognition

    implementation SquaredependenciesList.okhttp3
    implementation dependenciesgeneralList.gson
    implementation dependenciesSupportList.annotation
//
    fullImplementation project(path: ':libcore')
//    fullImplementation project(':libcore')
//    fullImplementation (dependenciesList.archLifecycleExtensions) {
//        exclude group: 'android.arch.lifecycle', module: 'livedata'
//        exclude group: 'android.arch.lifecycle', module: 'viewmodel'
//        exclude group: 'android.arch.core', module: 'runtime'
//    }
    fullImplementation(dependenciesSupportList.lifecycle_extensions) {
        exclude group: 'android.arch.lifecycle', module: 'livedata'
        exclude group: 'android.arch.lifecycle', module: 'viewmodel'
        exclude group: 'android.arch.core', module: 'runtime'
    }
//    fullAnnotationProcessor dependenciesList.archLifecycleCompiler
    fullAnnotationProcessor dependenciesSupportList.lifecycle_compiler

}