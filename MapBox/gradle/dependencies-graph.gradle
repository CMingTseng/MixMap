//Ref : https://github.com/vanniktech/gradle-dependency-graph-generator-plugin
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        classpath pluginDependencies.dependencyGraph
    }
}

//import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorPlugin
//import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorExtension.Generator
//import guru.nidi.graphviz.attribute.Color
//import guru.nidi.graphviz.attribute.Style

import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorPlugin
import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorExtension.Generator
import com.vanniktech.dependency.graph.generator.dot.GraphFormattingOptions
import com.vanniktech.dependency.graph.generator.dot.Color
import com.vanniktech.dependency.graph.generator.dot.Shape
import com.vanniktech.dependency.graph.generator.dot.Style

//plugins.apply(DependencyGraphGeneratorPlugin)
plugins.apply(DependencyGraphGeneratorPlugin)

def mapboxGenerator = new Generator(
        "mapboxLibraries", // Suffix for our Gradle task.
        "", // Root suffix that we don't want in this case.
        { dependency -> dependency.getModuleGroup().startsWith("com.mapbox.mapboxsdk") }, // Only want Mapbox libs.
        { dependency -> true }, // Include transitive dependencies.
        { node, dependency -> node.add(Style.FILLED, Color.rgb("#ffcb2b")) }, // Give them some color.
)

dependencyGraphGenerator {
    generators = [ mapboxGenerator ]
}